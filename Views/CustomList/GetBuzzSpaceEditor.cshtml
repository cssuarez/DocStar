@using Astria.Framework.Utility
@using Astria.Framework.DataContracts
@{
    Layout = null;
}
@model Astria.UI.Web.Models.BuzzEditorModel
@{
    var defaultAttr = Model.SelectedBuzz.DefaultAd ? "checked=\"checked\"" : "";
    var selectedAttr = "";
}
<!DOCTYPE html>
<html>
<head>

    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    @Styles.Render("~/Content/css/buzzspaceeditorcss")<title>BuzzSpaceEditor</title>
    <style>
        .buttons {
            display: inline-block;
            position: relative;
            width: 200px;
            padding: 10px 40%;
        }

        .mce-fullscreen .buttons {
            position: absolute;
            bottom: -6px;
            z-index: 200;
        }
    </style>
</head>
<body>
    <input type="hidden" id="useSSL" value="@Request.IsSecureConnection.ToString()" />
    <input type="hidden" id="BaseURI" value="@Url.Content("~")" />
    <input type="hidden" id="LoginURI" value="@Functions.GetAuthenticationProxyUrl()" />
    <input type="hidden" id="ServerVD" value="@Functions.GetSetting(Constants.SERVER_VD, "/FusionServer")" />
    @Scripts.Render("~/buzzspaceeditorjs")
    <script src="@Url.Content("~/Content/LibsExternal/TinyMCEJScripts2/jquery.tinymce.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/LibsExternal/TinyMCEJScripts2/tinymce.min.js")" type="text/javascript"></script>
    
    <form name='buzz' action="@Url.Content("~/CustomList/GetBuzzSpaceEditor")" method="post">
        <input type="hidden" name="System" value="@Model.SelectedBuzz.System" />
        <div>
            <h2>@Constants.i18n("addEditBuzzSpaces")</h2>
            <fieldset>
                <div id="buzzSchedule" class="clearfix">
                    <div class="buzz_left_block">
                        <ol class="unstyledList">
                            <li><span>@Constants.i18n("selectBuzzSpace"):</span>
                                <select name="Id">
                                    @foreach (var item in Model.BuzzSpaces)
                                    {
                                        if (Model.SelectedBuzz == item) { selectedAttr = "selected=\"selected\""; }
                                        else { selectedAttr = ""; }
                                        <option value="@item.Id" @Html.Raw(selectedAttr)>@item.Title</option>
                                    }
                                </select>
                            </li>
                            <li><span>@Constants.i18n("title"):</span>
                                <input type="text" name="Title" value="@Model.SelectedBuzz.Title" />
                            </li>
                            <li><span>@Constants.i18n("isBuzzDefaultAd"):</span>
                                <input title="@Constants.i18n("isBuzzDefaultAdTT")" type="checkbox" name="DefaultAd" @Html.Raw(defaultAttr) />
                            </li>
                            <li><span>@Constants.i18n("buzzStartDate"):</span>
                                <input class="buzzScheduleElement" type="text" name="StartDate" value="@Model.SelectedBuzz.StartDate" />
                            </li>
                            <li><span>@Constants.i18n("buzzEndDate"):</span>
                                <input class="buzzScheduleElement" type="text" name="EndDate" value="@Model.SelectedBuzz.EndDate" />
                            </li>
                        </ol>
                    </div>
                    <div class="buzz_right_block">
                        <ol class="unstyledList">
                            <li>
                                @*<span>@Constants.i18n("buzzRunOnMonths"):</span>*@
                                <select class="buzzScheduleElement" name="MonthsOfYear" multiple="multiple">
                                    @foreach (int item in Enum.GetValues(typeof(MonthsOfYear)))
                                    {
                                        var moy = (MonthsOfYear)item;
                                        if (item != 0 && (Model.SelectedBuzz.MonthsOfYear & moy) == moy) { selectedAttr = "selected=\"selected\""; }
                                        else if (Model.SelectedBuzz.MonthsOfYear == MonthsOfYear.None && moy == MonthsOfYear.None) { selectedAttr = "selected=\"selected\""; }
                                        else { selectedAttr = ""; }
                        
                                        <option value="@moy" @Html.Raw(selectedAttr)>@Constants.i18n("moy_" + moy.ToString())</option>
                                    }
                                </select>
                            </li>
                            <li>
                                @*<span>@Constants.i18n("buzzRunOnDays"):</span>*@
                                <select class="buzzScheduleElement" name="DaysOfMonth" multiple="multiple">
                                    @if (Functions.IsEmptyList(Model.SelectedBuzz.DaysOfMonth) || Model.SelectedBuzz.DaysOfMonth.Any(r => r == 0)) { selectedAttr = "selected=\"selected\""; }
                                    else { selectedAttr = ""; }
                                    <option value="0" @Html.Raw(selectedAttr)>@Constants.i18n("buzzAnyMonthDay") </option>
                                    @for (int i = 1; i < 32; i++)
                                    {
                                        if (!Functions.IsEmptyList(Model.SelectedBuzz.DaysOfMonth) && Model.SelectedBuzz.DaysOfMonth.Any(r => r == i)) { selectedAttr = "selected=\"selected\""; }
                                        else { selectedAttr = ""; }
                                        <option value="@i" @Html.Raw(selectedAttr)>@i</option>
                                    }
                                </select>
                            </li>
                            <li>
                                @*<span>@Constants.i18n("buzzRunOnDaysOfWeek"):</span>*@
                                <select class="buzzScheduleElement" name="DaysOfWeek" multiple="multiple">
                                    @foreach (int item in Enum.GetValues(typeof(DaysOfWeek)))
                                    {
                                        var dow = (DaysOfWeek)item;
                                        if (item != 0 && (Model.SelectedBuzz.DaysOfWeek & dow) == dow) { selectedAttr = "selected=\"selected\""; }
                                        else if (Model.SelectedBuzz.DaysOfWeek == DaysOfWeek.None && dow == DaysOfWeek.None) { selectedAttr = "selected=\"selected\""; }
                                        else { selectedAttr = ""; }
                                        <option value="@dow" @Html.Raw(selectedAttr)>@Constants.i18n("dow_" + dow.ToString())</option>
                                    }
                                </select>
                            </li>
                        </ol>
                    </div>
                </div>
                <div id="buzzContentEditor">
                    <textarea name="Content">@Html.Raw(@Model.SelectedBuzz.Content)</textarea>
                </div>
                <div class="buttons">
                    <input id="save_buzz" type="button" value="@Constants.i18n("save")" />
                    <input id="del_buzz"type="button" value="@Constants.i18n("delete")" />
                    @if (Model.Exception != null)
                    { 
                        <div id="error" class="warningErrorClass">@Model.Exception.Message</div>
                    }
                </div>
            </fieldset>
        </div>
    </form>
    <script type="text/javascript">
        $(document).ready(function () {
            BuzzEditor.init();
        });
    </script>
</body>
</html>
