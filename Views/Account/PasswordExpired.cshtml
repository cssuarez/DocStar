@{
    Layout = null;    
}
@using Astria.UI.Web.Models;
@model Astria.UI.Web.Models.PasswordExpiredModel
@using Astria.Framework.DataContracts;
@using Astria.Framework.Utility;
<!DOCTYPE html>
<html>
<head>
    <title>@Constants.i18n("passwordExpired")</title>
    @Styles.Render("~/Content/css/defaultcss")
</head>
<body>
    <input type="hidden" id="useSSL" value="@Request.IsSecureConnection.ToString()" />
    <input type="hidden" id="BaseURI" value="@Url.Content("~")" />
    <input type="hidden" id="LoginURI" value="@Functions.GetAuthenticationProxyUrl()" />
    <input type="hidden" id="ServerVD" value="@Functions.GetSetting(Constants.SERVER_VD, "/FusionServer")" />
    @Scripts.Render("~/defaultjs")
    <div id="pass_expired">
        <h1>@Constants.i18n("changePasswordTitle")</h1>
        <ol id="pass_expired_reset" class="left_labeled_layout ib">
            @if (@Model.PasswordStrengthEnforcement)
            {            
                <p>@Constants.i18n("passwordStrengthText")</p>            
            }

                                <li>
                                    <label>@Constants.i18n("currentPassword"):</label>
                                    <input type="password" name="currentPassword" />
                                </li>
                                <li>
                                    <label>@Constants.i18n("newPassword"):</label>
                                    <input type="password" name="password1" />
                                </li>
                                <li>
                                    <label>@Constants.i18n("newPwConfirm"):</label>
                                    <input type="password" name="password2" />
                                </li>
                                <li>
                                    <div id="pass_success">
                                        <span class="success_message">@Constants.i18n("changesSavedSuccess")</span>
                                    </div>
                                </li>
                                <li>
                                    <label></label>
                                    <div class="buttons">
                                        <input type="button" name="save" value="@Constants.i18n("save")" onclick="save()" />
                                        <input type="hidden" name="pass_error" />
                                    </div>
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var proxy = UserServiceProxy()
        $ = jQuery;
        function save() {
            $('input[name="save"]').attr('disabled', true);
            var userNameVal = $.cookie('userNameVal');
            var oldPass = $("input[name='currentPassword']").val();
            var newPassOne = $("input[name='password1']").val();
            var newPassTwo = $("input[name='password2']").val();
            ErrorHandler.removeErrorTags(css.warningErrorClass, css.inputErrorClass);
            if (newPassOne.length > 128 || newPassTwo.length > 128) {
                $('input[name="save"]').attr('disabled', false);
                if (newPassOne.length > 128) { ErrorHandler.addErrors({ 'password1': Constants.c.veryLongPass }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, ''); }
                if (newPassTwo.length > 128) { ErrorHandler.addErrors({ 'password2': Constants.c.veryLongPass }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, ''); }
            } else if (newPassOne !== newPassTwo) {
                $('input[name="save"]').attr('disabled', false);
                ErrorHandler.addErrors({ 'password1': Constants.c.passNotMatch }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, '');
                ErrorHandler.addErrors({ 'password2': Constants.c.passNotMatch }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, '');
            } else {
                $('input[name="save"]').attr('disabled', 'disabled');
                $.ajax({
                    url: Constants.Url_Base + "Account/ResetPassword",
                    type: "post",
                    data: { userName: userNameVal, password: newPassOne, oldPassword: oldPass },
                    success: function (result) {
                        if (result.status === 'ok') {
                            var dest = $.cookie('destHref');
                            if (!dest) {
                                dest = Constants.Url_Base;
                            }
                            $.cookie('destHref', null);
                            window.location.href = dest;
                        }
                        else {
                            ErrorHandler.addErrors({ 'save': result.message }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, '');
                        }
                    },
                    error: function (jqxhr, textStatus, error) {
                        if (error.Message === Constants.c.passwordStrength) {
                            ErrorHandler.addErrors({ 'pass_error': error.Message }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, '');
                        } else {
                            ErrorHandler.addErrors({ 'save': error.Message }, css.warningErrorClass, css.warningErrorClassTag, css.inputErrorClass, '');
                        }
                    },
                    complete: function (xhr, status) {
                        $('input[name="save"]').attr('disabled', false);
                    }
                });
            }
        }
    </script>
</body>
</html>
