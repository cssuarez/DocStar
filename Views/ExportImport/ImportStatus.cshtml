@using Astria.Framework.Utility;
@using Astria.Framework.DataContracts;
@{
    Layout = null;
}
@model Astria.Framework.DataContracts.V2.SR<Astria.Framework.DataContracts.ImportStatus>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>ImportStatus</title>
    <style>
        body {
            font-family: Verdana, Tahoma;
            font-size: 11px;
        }

        .warningErrorClass {
            color: #a60000;
        }

        #importProgressCont {
            background: #FFF;
            border: 1px solid black;
            width: 300px;
            height: 25px;
            line-height: 10px;
            text-align: center;
            position: relative;
        }

        #importProgress {
            width: 0;
            height: 100%;
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#B7D9EA', endColorstr='#7CBBDA');
            background: -webkit-gradient(linear, left top, left bottom, from(#B7D9EA), to(#7CBBDA));
            background: -moz-linear-gradient(top, #B7D9EA, #7CBBDA); /* for firefox 3.6+ */
            background: linear-gradient(to bottom, #B7D9EA 0, #7CBBDA 100%); /* W3C (IE10) maybe others soon.*/
            display: inline-block;
            position: absolute;
            left: 0;
            top: 0;
        }

        #importStatus {
            position: relative;
            top: 25%;
        }
    </style>
</head>
<body>
    @{
        <div>
            @if (Model != null)
            {
                if (Model.Result != null && Model.Result.JobStatus != ImportJobStatus.Failed)
                {
                    var percentDone = Model.Result.PercentDone + "%";
                    var jobStatus = Model.Result.JobStatus + " (" + percentDone + ") ";
                <div id="importProgressCont">
                    <span id="importProgress" style="width: @percentDone">&nbsp;</span>
                    <span id="importStatus">@jobStatus</span>
                </div>
                }
            }
        </div>
    }
    <script type="text/javascript">
        $ = window.parent.jQuery;
        var getJobId = function () {
            return $(window.parent.document.getElementById('importJobId')).val();
        };
        var clearStatus = function () {
            $(parent.document.getElementById('importStatus')).fadeOut();
        };
        $(document).ready(function () {
            var getStatus = parent.getStatus;
            var pollTime = @Model.Result.NextPollSeconds * 1000;
            var importJobId = getJobId();
            var parentWindow = parent.parent;
            if ("@Model.Result.JobStatus" == "@ImportJobStatus.Failed") {
                // Obtain Exception and display in message box
                var importExportSvc = parentWindow.ImportExportServiceProxy();
                var sf = function (job) {
                    clearStatus();
                    parent.parent.ErrorHandler.addErrors(job.Exception);
                };
                var ff = function (jqXHR, textStatus, errorThrown) {
                    parent.parent.ErrorHandler.popUpMessage(errorThrown);
                };
                importExportSvc.getImportJob(importJobId, sf, ff);
            }
            if (@Model.Result.PercentDone !== 100 && "@Model.Result.JobStatus" !== "@ImportJobStatus.Completed") {
                importJobPoll = setTimeout(function () {
                    var importJobId = getJobId();
                    getStatus(importJobId);
                }, pollTime);
            }
            if(@Model.Result.PercentDone === 100 && "@Model.Result.JobStatus" === "@ImportJobStatus.Completed") {
                setTimeout(clearStatus, 1000);
                window.parent.parent.exportImportCC.trigger("refreshAfterImport", {importJobId: importJobId});
            }
        });
    </script>
</body>

</html>
